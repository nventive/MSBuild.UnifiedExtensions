<Project>
	<PropertyGroup>
		<TargetFrameworks>xamarinios10;monoandroid90;monoandroid10.0;uap10.0.17763;netstandard2.0</TargetFrameworks>
		<Authors>nventive</Authors>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<Copyright>Copyright Â©2020 nventive inc.</Copyright>
		<Description>A set of MSBuild targets designed to ease cross-platform development</Description>
		<PackageTags>msbuild cross-platform xamarin azuredevops</PackageTags>
		<ProjectUrl>https://dev.azure.com/nventive/Open%20Source/_git/Nimue</ProjectUrl>
		<RepositoryUrl>https://dev.azure.com/nventive/Open%20Source/_git/Nimue</RepositoryUrl>
		<PackageIcon>icon.png</PackageIcon>
	</PropertyGroup>
		
	<PropertyGroup>
		<OutputType>module</OutputType>
		<DevelopmentDependency>true</DevelopmentDependency>
		<!-- For projects that don't have code, the build output doesn't need to be included . Override in the project when code is present -->
		<IncludeBuildOutput>false</IncludeBuildOutput>
		<!-- Prevents warning for "No Address and User has been specified in order to establish a connection to a Mac Server" -->
		<NoWarn>$(NoWarn);VSX1000;NU5105</NoWarn>
	</PropertyGroup>

	<ItemGroup>
		<_AllTargetFrameworks Include="$(TargetFrameworks)" />
		<_AndroidTargetFrameworks Include="$([System.Text.RegularExpressions.Regex]::Matches('$(TargetFrameworks)', '(monoandroid[^;]+)'))" />
		<_IosTargetFrameworks Include="$([System.Text.RegularExpressions.Regex]::Matches('$(TargetFrameworks)', '(xamarinios[^;]+)'))" />
		<_UapTargetFrameworks Include="$([System.Text.RegularExpressions.Regex]::Matches('$(TargetFrameworks)', '(uap[^;]+)'))" />
		<_NetStandardTargetFrameworks Include="$([System.Text.RegularExpressions.Regex]::Matches('$(TargetFrameworks)', '(netstandard[^;]+)'))" />
		<!-- List of platform-specific target sdks. Allows a dynamic inclusion of framework-specific files without having to use the exact version. See example below: -->
		<!-- 
			<None Include="All.targets" Pack="true" PackagePath="@(_AllTargetFrameworks->'build/%(Identity)/Example.targets')" />
			<None Include="Android.targets" Pack="true" PackagePath="@(_AndroidTargetFrameworks->'build/%(Identity)/Example.targets')" />
			<None Include="iOS.targets" Pack="true" PackagePath="@(_IosTargetFrameworks->'build/%(Identity)/Example.targets')" />
			<None Include="UAP.targets" Pack="true" PackagePath="@(_UapTargetFrameworks->'build/%(Identity)/Example.targets')" />
			<None Include="NetStandard.targets" Pack="true" PackagePath="@(_NetStandardTargetFrameworks->'build/%(Identity)/Example.targets')" />
		-->
		<!-- Assuming that TargetFrameworks = xamarinios10;monoandroid90;monoandroid10.0;uap10.0.17763;netstandard2.0, this will result in the following: -->
		<!--
			<None Include="All.targets" Pack="true" PackagePath="build/xamarinios10/Example.targets;build/monoandroid90/Example.targets;build/monoandroid10.0/Example.targets;build/uap10.0.17763/Example.targets;build/netstandard2.0/Example.targets" />
			<None Include="Android.targets" Pack="true" PackagePath="build/monoandroid90/Example.targets;build/monoandroid10.0/Example.targets" />
			<None Include="iOS.targets" Pack="true" PackagePath="build/xamarinios10/Example.targets)" />
			<None Include="UAP.targets" Pack="true" PackagePath="build/uap10.0.17763/Example.targets" />
			<None Include="NetStandard.targets" Pack="true" PackagePath="build/netstandard2.0/Example.targets" />
		-->
	</ItemGroup>

	<ItemGroup>
		<None Include="$(MSBuildThisFileDirectory)..\icon.png"
			  Pack="true"
			  PackagePath="$(PackageIcon)" />
	</ItemGroup>
	
	<!-- Package Debug -->
	<PropertyGroup>
		<GeneratePackageOnBuild>true</GeneratePackageOnBuild>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<PackageOutputPath Condition="'$(BuildingInsideVisualStudio)' == 'True'">/Packages</PackageOutputPath>
		<PackageVersion  Condition="'$(BuildingInsideVisualStudio)' == 'True'">999.999.999-debug</PackageVersion>
	</PropertyGroup>
	
	<Target Name="_ClearPackageCache"
			AfterTargets="Pack" 
			Condition="'$(NugetPackageRoot)' != '' and '$(PackageId)' != ''">
		<PropertyGroup>
			<_PackageCacheRoot>$(NugetPackageRoot)\$(PackageId)\$(PackageVersion)</_PackageCacheRoot>
		</PropertyGroup>
		
		<ItemGroup>
			<_NuGetCacheFiles Include="$(_PackageCacheRoot)\**\*.*" />
		</ItemGroup>
		
		<Message Importance="high" Text="Deleting NuGet cache under $(_PackageCacheRoot)" />
		
		<Delete Files="@(_NuGetCacheFiles)" />
		<RemoveDir Directories="$(_PackageCacheRoot)"
				   Condition="Exists('$(_PackageCacheRoot)')" />
	</Target>
</Project>