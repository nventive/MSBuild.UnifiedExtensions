<Project>
	<Target Name="_CopyApplicationPackagesForPublishing"
			AfterTargets="Build"
			DependsOnTargets="SignAndroidPackage"
			Condition="'$(BuildingInsideVisualStudio)' == '' and '$(PackageOutputPath)' != '' and '$(AndroidApplication)' == 'true'">
		<Copy SourceFiles="@(ApkAbiFilesAligned)"
			  Condition="'$(AndroidPackageFormat)' != 'aab'"
			  DestinationFiles="@(ApkAbiFilesAligned->'$(PackageOutputPath)\%(RecursiveDir)%(Filename)%(Extension)')" />

		<Copy SourceFiles="$(_AabFileSigned)"
			  Condition="'$(AndroidPackageFormat)' == 'aab'"
			  DestinationFolder="$(PackageOutputPath)" />
	</Target>

	 <!-- _ValidateAndroidPackageProperties fetches the packagd id from the manifest and stores it in a variable used throughout the build -->
	 <!-- The id must be changed before this happens -->
	<Target Name="_UpdatePackageId"
			BeforeTargets="_ValidateAndroidPackageProperties"
			Condition="'$(AndroidApplication)' == 'true' and '$(ApplicationIdentifier)' != ''">

		<PropertyGroup>
			<!-- _AndroidManifestAbs contains the location of the Android manifest -->
			<!-- Set by Xamarin Android : https://github.com/xamarin/xamarin-android/blob/a2a76c337705b1a24ee45a0fe979d24319e3bee3/src/Xamarin.Android.Build.Tasks/Xamarin.Android.Common.targets#L691 -->
			<_ApplicationManifestPath>$(ProjectDir)$(AndroidManifest)</_ApplicationManifestPath>
		</PropertyGroup>

		<Warning Condition="!Exists('$(_ApplicationManifestPath)')"
				 Text="No application manifest found for $(MSBuildProjectFile)" />

		<XmlPeek Condition="Exists('$(_ApplicationManifestPath)')"
				 XmlInputPath="$(_ApplicationManifestPath)"
				 Query="/manifest/@package"
				 Namespaces="http://schemas.android.com/apk/res/android">
			<Output TaskParameter="Result"
					PropertyName="_CurrentApplicationIdentifier" />
		</XmlPeek>

		<Message Text="Current package identifier is '$(_CurrentApplicationIdentifier)' in $(_ApplicationManifestPath)"
				 Condition="'$(_CurrentApplicationIdentifier)' != ''" />

		<Warning Text="Could not determine the current Android package name; searched in $(_ApplicationManifestPath)"
				 Condition="Exists('$(_ApplicationManifestPath)') and '$(_CurrentApplicationIdentifier)' == ''" />

		<PropertyGroup>
			<_ShouldReplaceApplicationIdentifier>False</_ShouldReplaceApplicationIdentifier>
			<_ShouldReplaceApplicationIdentifier Condition="'$(_CurrentApplicationIdentifier)' != '' and '$(_CurrentApplicationIdentifier)' != '$(ApplicationIdentifier)'">True</_ShouldReplaceApplicationIdentifier>
		</PropertyGroup>

		<ItemGroup>
			<_CsharpFiles Include="..\**\*.cs" />
			<_XmlFiles Include="..\**\*.xml" />
			<_JsonFiles Include="..\**\*.json" />
		</ItemGroup>

		<Message Text="Changing Android package identifier from '$(_CurrentApplicationIdentifier)' to '$(ApplicationIdentifier)'"
				 Condition="$(_ShouldReplaceApplicationIdentifier)"
				 Importance="$(_MessageImportance)" />

		<FileUpdate Files="@(_CsharpFiles)"
					Regex="$(_CurrentApplicationIdentifier)"
					ReplacementText="$(ApplicationIdentifier)"
					IgnoreCase="True"
					Condition="$(_ShouldReplaceApplicationIdentifier)"/>

		<FileUpdate Files="@(_XmlFiles)"
					Regex="$(_CurrentApplicationIdentifier)"
					ReplacementText="$(ApplicationIdentifier)"
					IgnoreCase="True"
					Condition="$(_ShouldReplaceApplicationIdentifier)"/>

		<FileUpdate Files="@(_JsonFiles)"
					Regex="$(_CurrentApplicationIdentifier)"
					ReplacementText="$(ApplicationIdentifier)"
					IgnoreCase="True"
					Condition="$(_ShouldReplaceApplicationIdentifier)"/>
	</Target>
</Project>
