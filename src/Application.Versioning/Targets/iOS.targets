<Project>
	<UsingTask TaskName="_XmlUpdate"
		TaskFactory="CodeTaskFactory"
		AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.Core.dll">
		<ParameterGroup>
			<XmlFileName Required="True" />
			<XPath Required="True" />
			<Value Required="True" />
		</ParameterGroup>
		<Task>
			<Reference Include="System.Xml" />
			<Reference Include="System.Xml.Linq" />
			<Using Namespace="System" />
			<Using Namespace="System.Xml.XPath" />
			<!-- The following code is from the MSBuildTasks library (https://github.com/loresoft/msbuildtasks/blob/6196d43e7eb6807f306e9861b286fe61c8bb0993/Source/MSBuild.Community.Tasks/XmlUpdate.cs) -->
			<!-- MSBuildTasks is not used as it brings a Zip tasks that conflicts with Xamarin's -->
			<Code Type="Fragment"
				Language="cs">
				<![CDATA[
						System.Xml.Linq.XDocument xdoc = System.Xml.Linq.XDocument.Load(XmlFileName);
						System.Xml.XmlNamespaceManager manager = new System.Xml.XmlNamespaceManager(new System.Xml.NameTable());

						var items = xdoc.XPathEvaluate(XPath, manager) as System.Collections.Generic.IEnumerable<object>;

						Console.WriteLine("Updating " + items.Count() + " nodes");

						foreach (var item in items.ToArray())
						{
								var attr = item as System.Xml.Linq.XAttribute;
								if (attr != null)
								{
									attr.SetValue(Value);
								}

								var ele = item as System.Xml.Linq.XElement;
								if (ele != null)
								{
									ele.SetValue(Value);
								}
						}

						xdoc.Save(XmlFileName);
				]]>
			</Code>
		</Task>
	</UsingTask>

	<Target Name="_SetApplicationVersion"
		AfterTargets="_DetectAppManifest"
		DependsOnTargets="_CalculateApplicationVersion"
		Condition="'$(BuildingInsideVisualStudio)'=='' and '$(ApplicationVersion)'!=''">
		<PropertyGroup>
			<!-- _AppManifest contains the path to Info.plist (an item Test.plist can be set as the iOS plist by setting its LogicalName to Info.plist) relative to the project -->
			<!-- Set by Xamarin.iOS : https://github.com/xamarin/xamarin-macios/blob/bcb8f01a7a9b3582ced7f20ffa9a0f757d1a4221/msbuild/Xamarin.iOS.Tasks.Core/Xamarin.iOS.Common.targets#L569 -->
			<_ApplicationManifestPath>$([System.IO.Path]::Combine($(MSBuildProjectDirectory),$(_AppManifest)))</_ApplicationManifestPath>
		</PropertyGroup>

		<Warning Condition="!Exists('$(_ApplicationManifestPath)')"
			Text="No application manifest found for $(MSBuildProjectFile)" />

		<!-- We are not relying on MSBuild's XmlPoke as it introduces unwanted changes to the plist, making it invalid -->
		<_XmlUpdate Condition="Exists('$(_ApplicationManifestPath)')"
			XmlFileName="$(_ApplicationManifestPath)"
			XPath="//plist/dict/key[text() = 'CFBundleShortVersionString']/following-sibling::string[1]"
			Value="$(ApplicationVersion)" />

		<_XmlUpdate Condition="Exists('$(_ApplicationManifestPath)')"
			XmlFileName="$(_ApplicationManifestPath)"
			XPath="//plist/dict/key[text() = 'CFBundleVersion']/following-sibling::string[1]"
			Value="$(ApplicationBuildNumber)" />
	</Target>
</Project>
